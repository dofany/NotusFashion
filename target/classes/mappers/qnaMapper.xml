<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.notus.mappers.qnaMapper">

	<!-- 작성 -->
	<insert id="write">
		insert into tbl_board(bno, title, content, writer)
		values
		(tbl_board_seq.nextval, #{title}, #{content}, #{writer})
	</insert>

	<!-- 조회 -->
	<select id="read" resultType="com.notus.domain.QnaVO">
		select bno, title, content, writer,
		regDate, viewCnt from tbl_board where bno = #{bno}
	</select>

	<!-- 수정 -->
	<update id="update">
		update tbl_board set title = #{title}, content =
		#{content} where bno = #{bno}
	</update>

	<!-- 삭제 -->
	<delete id="delete">
		delete from tbl_board where bno = #{bno}
	</delete>

	<select id="list" resultType="com.notus.domain.QnaVO">
		select bno, title, writer, regDate
		from tbl_board order by bno desc
	</select>

	<select id="listPage" resultType="com.notus.domain.QnaVO"
		parameterType="com.notus.domain.Criteria"> select bno, title, content, writer, regDate, viewCnt
		from (
		select bno, title, content, writer, regDate, viewCnt,
		row_number() over(order by bno desc) as rNum from tbl_board) mb where
		rNum between #{rowStart} and #{rowEnd} order by bno desc
	</select>

	<select id="listCount" resultType="int"><![CDATA[select count(bno) from tbl_board where bno >0]]>
	</select>

	<select id="listSearch" resultType="com.notus.domain.QnaVO"
		parameterType="com.notus.domain.SearchCriteria">
		select bno, title, content, writer, regDate, viewCnt
		from (select bno,
		title, content, writer, regDate, viewCnt, row_number() over(order by
		bno desc) as rNum from tbl_board
		<include refid="search"></include>
		) mb where rNum between #{rowStart} and #{rowEnd} order by bno desc
	</select>

	<select id="countSearch" resultType="int">
		select count(bno)
		from tbl_board

<![CDATA[
where bno > 0
]]>
		<include refid="search"></include>

	</select>

	<sql id="search">
		<if test="searchType != null">
			<if test="searchType == 't'.toString()">and title like '%' || #{keyword} || '%'</if>
			<if test="searchType == 'c'.toString()">and content like '%' || #{keyword} || '%'</if>
			<if test="searchType == 'w'.toString()">and writer like '%' || #{keyword} || '%'</if>
			<if test="searchType == 'tc'.toString()">and (title like '%' || #{keyword} || '%') or (content
				like '%' || #{keyword} || '%')</if>
		</if>
	</sql>

</mapper>